from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (
    QApplication, QWidget, QLabel, QPushButton, QHBoxLayout, QVBoxLayout, QRadioButton)
from instr import *

questions_text = (ne1, si1, ti1, fi1, ne2, ni1, te1, ni2, se1, fe1, si2, fe2, fi2, te2, ti2, se2)
functions = (ne, si, ti, fi, ne, ni, te, ni, se, fe, si, fe, fi, te, ti, se)

class Question():
    def __init__(self, question, answer1, answer2):
        self.question = question
        self.answer1 = answer1
        self.answer2 = answer2


questions = []

for quest in questions_text:
    q1 = Question(quest, absolutely_no, absolutely_yes)
    questions.append(q1)

class Question1(QWidget):
    def __init__(self, questions=questions, q_index=0):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.score()
        self.show()
        self.q_index = q_index
        self.questions = questions

        self.a = 0

    def set_appear(self):
        self.setWindowTitle('тест')
        self.resize(500, 400)
        self.move(650, 300)

    def initUI(self):
        self.question1 = QLabel(self.questions[self.q_index])
        self.yes2 = QRadioButton(absolutely_yes)
        self.yes1 = QRadioButton(yes)
        self.idk = QRadioButton(idk)
        self.no1 = QRadioButton(no)
        self.no2 = QRadioButton(absolutely_no)
        self.next = QPushButton('следующий вопрос!（￣︶￣）↗　')

        self.layout = QVBoxLayout()
        self.layout.addWidget(self.question1, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.yes2, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.yes1, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.idk, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.no1, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.no2, alignment = Qt.AlignLeft)
        self.layout.addWidget(self.next, alignment = Qt.AlignLeft)
        self.setLayout(self.layout)

    def score(self):
        self.plus2.clicked.connect(self.update_a)
        self.plus1.clicked.connect(self.update_a)
        self.zero.clicked.connect(self.update_a)
        self.minus1.clicked.connect(self.update_a)
        self.minus2.clicked.connect(self.update_a)

    def update_a(self):
        if self.plus2.isChecked():
            self.a = 2
        elif self.plus1.isChecked():
            self.a = 1
        elif self.zero.isChecked():
            self.a = 0
        elif self.minus1.isChecked():
            self.a = -1
        elif self.minus2.isChecked():
            self.a = -2
        

    def connects(self):
        self.next.clicked.connect(self.next_click)

    def next_click(self):
        print("текущее значение a:", self.a)
        self.close()
        Question1(q_index=self.q_index + 1)
