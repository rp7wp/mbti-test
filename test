from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (
    QApplication, QWidget, QLabel, QPushButton, QHBoxLayout, QVBoxLayout, QRadioButton)

class FirstWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.score()
        self.show()

        self.a = 0

    def set_appear(self):
        self.setWindowTitle('тест')
        self.resize(500, 400)
        self.move(650, 300)

    def initUI(self):
        self.plus2 = QRadioButton('2')
        self.plus1 = QRadioButton('1')
        self.zero = QRadioButton('0')
        self.minus1 = QRadioButton('-1')
        self.minus2 = QRadioButton('-2')
        self.next = QPushButton('Дальше')

        self.layout = QVBoxLayout()
        self.layout.addWidget(self.plus2, alignment=Qt.AlignCenter)
        self.layout.addWidget(self.plus1, alignment=Qt.AlignCenter)
        self.layout.addWidget(self.zero, alignment=Qt.AlignCenter)
        self.layout.addWidget(self.minus1, alignment=Qt.AlignCenter)
        self.layout.addWidget(self.minus2, alignment=Qt.AlignCenter)
        self.layout.addWidget(self.next, alignment=Qt.AlignCenter)
        self.setLayout(self.layout)

    def score(self):
        self.plus2.clicked.connect(self.update_a)
        self.plus1.clicked.connect(self.update_a)
        self.zero.clicked.connect(self.update_a)
        self.minus1.clicked.connect(self.update_a)
        self.minus2.clicked.connect(self.update_a)

    def update_a(self):
        if self.plus2.isChecked():
            self.a = 2
        elif self.plus1.isChecked():
            self.a = 1
        elif self.zero.isChecked():
            self.a = 0
        elif self.minus1.isChecked():
            self.a = -1
        elif self.minus2.isChecked():
            self.a = -2
        

    def connects(self):
        self.next.clicked.connect(self.next_click)

    def next_click(self):
        
        print("текущее значение a:", self.a)
        self.close()
        self.nextwin = SecondWindow(self.a)
        self.nextwin.show()


class SecondWindow(QWidget):
    def __init__(self, a):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.score()
        self.show()

        self.a2 = a

    def set_appear(self):
        self.setWindowTitle('тест')
        self.resize(500, 400)
        self.move(650, 300)

    def initUI(self):
        self.plus2 = QRadioButton('2')
        self.plus1 = QRadioButton('1')
        self.zero = QRadioButton('0')
        self.minus1 = QRadioButton('-1')
        self.minus2 = QRadioButton('-2')
        self.exit = QPushButton('Завершить')

        self.layout = QVBoxLayout()
        self.layout.addWidget(self.plus2, alignment = Qt.AlignCenter)
        self.layout.addWidget(self.plus1, alignment = Qt.AlignCenter)
        self.layout.addWidget(self.zero, alignment = Qt.AlignCenter)
        self.layout.addWidget(self.minus1, alignment = Qt.AlignCenter)
        self.layout.addWidget(self.minus2, alignment = Qt.AlignCenter)
        self.layout.addWidget(self.exit, alignment = Qt.AlignCenter)
        self.setLayout(self.layout)
    
    def score(self):
        self.plus2.clicked.connect(self.update_a2)
        self.plus1.clicked.connect(self.update_a2)
        self.zero.clicked.connect(self.update_a2)
        self.minus1.clicked.connect(self.update_a2)
        self.minus2.clicked.connect(self.update_a2)

    def update_a2(self):
        if self.plus2.isChecked():
            self.a2 += 2
        elif self.plus1.isChecked():
            self.a2 += 1
        elif self.zero.isChecked():
            self.a2 += 0
        elif self.minus1.isChecked():
            self.a2 -= 1
        elif self.minus2.isChecked():
            self.a2 -= 2

    def connects(self):
        self.exit.clicked.connect(self.next_click)

    def next_click(self):
        print("конечное значение a:", self.a2)
        self.close()

app = QApplication([])
first_win = FirstWindow()
first_win.show()
app.exec_()

